#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void selectionSort(int arr[], int n) {
    int i, j, minIndex, temp;
    for (i = 0; i < n - 1; i++) {
        minIndex = i;
        for (j = i + 1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        temp = arr[i];
        arr[i] = arr[minIndex];
        arr[minIndex] = temp;
    }
}

void generateRandomNumbers(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 10000; // Random numbers from 0 to 9999
    }
}

void writeResultsToFile(int n, double timeTaken) {
    FILE *file = fopen("selection_sort_times.csv", "a");
    if (file == NULL) {
        printf("Error opening file!\n");
        return;
    }
    fprintf(file, "%d, %f\n", n, timeTaken);
    fclose(file);
}

int main() {
    srand(time(0));
    int sizes[] = {5000, 10000, 15000, 20000, 25000}; // Values of n
    int num_sizes = sizeof(sizes) / sizeof(sizes[0]);

    // Write CSV header
    FILE *file = fopen("selection_sort_times.csv", "w");
    fprintf(file, "n,Time Taken (seconds)\n");
    fclose(file);

    for (int i = 0; i < num_sizes; i++) {
        int n = sizes[i];
        int *arr = (int *)malloc(n * sizeof(int));

        if (arr == NULL) {
            printf("Memory allocation failed for n = %d\n", n);
            return 1;
        }

        generateRandomNumbers(arr, n);

        clock_t start = clock();
        selectionSort(arr, n);
        clock_t end = clock();

        double timeTaken = (double)(end - start) / CLOCKS_PER_SEC;
        printf("n = %d, Time Taken = %f seconds\n", n, timeTaken);

        writeResultsToFile(n, timeTaken);

        free(arr);
    }

    printf("Results saved to 'selection_sort_times.csv'\n");
    return 0;
}
